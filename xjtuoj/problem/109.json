{"title":"czq的全排列打印机","time_limit":1000,"memory_limit":512,"tags":["萌新向题目集","水题"],"operation":{"submit":"https://oj.xjtuicpc.com/problem/109#submit_code","submissions":"https://oj.xjtuicpc.com/submissions?problem_id=109","statistics":"https://oj.xjtuicpc.com/problem/109/statistics/fastest","testdata":"https://oj.xjtuicpc.com/problem/109/testdata","discussion":"https://oj.xjtuicpc.com/discussion/problem/109"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"**数据范围**是做题时需要着重考虑的地方，除了数组的大小需要依此确定之外，数据类型的选用也应当和题目要求吻合。\r\n\r\n<details>\r\n\r\n例如，如果变量的值可能大于等于$2^{31}=2147483647$，就不能使用```int```类型而需要转而使用```long long```类型，有时甚至需要加上```unsigned```修饰以获取非负数范围内更大的范围（针对```C/C++```）。\r\n\r\n此外，在编写程序时，也应当时刻注意类型间的运算，比如以下语句：\r\n``` cpp\r\nlong long ans;\r\nint a = 114514;\r\nint b = 1919810;\r\nans=a*b;\r\n```\r\n尽管存储结果的变量使用了64位有符号整数，但是运算数是以32位有符号整型的形式进行运算的，这意味着在赋值之前，乘法运算就已经溢出了。\r\n\r\n一种可行的改正方法是，将```a,b```都声明为```long long```。或者将最后一句写成这样：```ans=(long long)a*b```，这种写法强制将```a```转化为64位有符号整数，当它与32位有符号整数相乘时，会自动以更高精度的类型进行运算。\r\n\r\n此外，即使输入数据和答案都保证在```int```范围内，也需要留意中间值超过上界的情况。\r\n\r\n如果你使用的是```python/java```等语言，你或许可以稍稍松了口气，因为它们都是自带大整数的（但是取而代之的你需要考虑程序的时间效率问题)。\r\n\r\n</details>\r\n<br>\r\n\r\n我们称一个长度为$n$的整数数组$a_i$，满足$1 \\leq a_i \\leq n$ 且$\\forall 1 \\leq i < j \\leq n ,a_i \\neq a_j$为一个长度为$n$的全排列。例如$[1,3,2],[3,2,1]$是长度为3的全排列，而$[1,1,3]$，$[1,3]$不是全排列。\r\n\r\n现在czq想把所有长度为$n$的全排列打印出来，他有$k$台打印机，每台打印机每秒可以打印一个排列。多台打印机可以自由地并行打印，请问最少需要多少秒可以打印完所有的全排列。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"输入仅一行，有两个整数$n,k$，由空格分开。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"仅一个整数，为答案。"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"$1 \\leq n \\leq 20$\r\n\r\n$1 \\leq k \\leq 2\\times 10^9$\r\n\r\n保证答案不超过$2^{31}$。\r\n\r\n如果没有思路或者错到怀疑人生，可以查看以下提示：\r\n<details>\r\n\r\n长度为$n$的全排列有$n!$个。\r\n\r\n</details>\r\n\r\n<details>\r\n\r\n答案在`int`范围内，但是阶乘的结果呢？\r\n\r\n</details>"}]}