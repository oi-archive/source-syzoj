{"title":"「十二省联考2019」骗分过样例","time_limit":2000,"memory_limit":512,"tags":["2019","联合省选","数据结构"],"operation":{"submit":"https://noj.ac/problem/2032#submit_code","submissions":"https://noj.ac/submissions?problem_id=2032","statistics":"https://noj.ac/problem/2032/statistics/fastest","testdata":"https://noj.ac/problem/2032/testdata","discussion":"https://noj.ac/discussion/problem/2032"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"这是一道**传统题**。\r\n\r\n「我的程序需要完成什么功能呀？……」\r\n\r\n「我也不知道……」\r\n\r\n「啊？那我怎么写呀……」\r\n\r\n「已经有人给你写好测试了，只要你通过这些测试就可以了……」\r\n\r\n「啊？……」\r\n\r\n「所有的**最终测试数据**都在题目目录下，**请做好备份，避免误删**！」\r\n\r\n「这……」\r\n\r\n「哦，我还可以把输入格式告诉你……不过都有完整的数据了，知道输入格式可能也没太大用处吧……」\r\n\r\n------\r\n\r\n**本题测试数据请点击附加文件下载。**\r\n\r\n**同时推荐您做一下[这道相似的题](https://www.luogu.org/problemnew/show/P5042)。**"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"从标准输入读入数据。\r\n\r\n第一行输入一个字符串，表示需要运行的软件功能编号。两个编号越相似，说明对应的两个功能的算法越接近。\r\n\r\n接下来根据功能的不同，可能有任意长度的输入，详见每个功能的文档。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出到标准输出。\r\n\r\n详见每个功能的文档。"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"「『每个功能的文档』在哪里呀？」\r\n\r\n「我也没有，就像我没有题目描述一样……」\r\n\r\n「好吧……那我是不是打表就可以了呀……」\r\n\r\n「**代码长度限制是 102400 字节**（100KB），超过此限制会导致该题获得零分，直接打肯定是不行的！不过，需要的话倒是可以稍微打一些小的表……」\r\n\r\n「唔……」\r\n\r\n「另外，我们会给你的程序对于每个测试点分别评分，求和后得到总分。按照传统的规矩，每个测试点正确得满分，错误得 0 分。**每个测试点的分值不全相同，测试点的分值、顺序与难度没有必然联系**。」\r\n\r\n|测试点|功能编号|分值|\r\n|:-:|:-:|:-:|\r\n|$1$|$\\texttt{1_998244353}$|$4$|\r\n|$2$|$\\texttt{1_998244353}$|<!-- qwq -->$4$|\r\n|$3$|$\\texttt{1_998244353}$|<!-- qaq -->$4$|\r\n|$4$|$\\texttt{1?}$|$7$|\r\n|$5$|$\\texttt{1?+}$|$9$|\r\n|$6$|$\\texttt{1wa_998244353}$|$6$|\r\n|$7$|$\\texttt{1wa_998244353}$|$7$|\r\n|$8$|$\\texttt{2p}$|$4$|\r\n|$9$|$\\texttt{2p}$|$6$|\r\n|$10$|$\\texttt{2p}$|$8$|\r\n|$11$|$\\texttt{2u}$|$5$|\r\n|$12$|$\\texttt{2u}$|$6$|\r\n|$13$|$\\texttt{2u}$|$9$|\r\n|$14$|$\\texttt{2g}$|$5$|\r\n|$15$|$\\texttt{2g}$|$7$|\r\n|$16$|$\\texttt{2g?}$|$9$|\r\n\r\n#### 提示\r\n在你使用 C/C++ 的 `int` 类型时，如果发生了溢出，比较可能的情况是按照模 $2^{32}$ 同余的前提下，在 `int` 范围内取一个合理的值。例如在计算 $2147483647 + 2$ 时，较有可能会得到 $-2147483647$。\r\n\r\n然而，C/C++ 标准将这种情况归类为「未定义行为」。当你的程序试图计算会溢出的 `int` 运算时，除了上述结果外，编译器还可能会让你的程序在此时计算出错误结果、死循环、运行错误等，这也是符合 C/C++ 标准的。\r\n\r\n如果你的程序希望利用 `int` 的自然溢出的特性，请转换为 `unsigned` 类型运算。例如将 `a + b` 改写为 `(int) ((unsigned) a + (unsigned) b)`，以避免出现不预期的错误。"}]}