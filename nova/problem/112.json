{"title":"最小费用最大流 加强版","time_limit":1000,"memory_limit":256,"tags":["费用流","网络流","模板"],"operation":{"submit":"https://noj.ac/problem/112#submit_code","submissions":"https://noj.ac/submissions?problem_id=112","statistics":"https://noj.ac/problem/112/statistics/fastest","testdata":"https://noj.ac/problem/112/testdata","discussion":"https://noj.ac/discussion/problem/112"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"这是一道模板题。\r\n\r\n给定一个图，每条边有容量和费用，使用每条边的单位流量需要支付特定的费用。给定源点 $ 1 $ 和汇点 $ n $，求图的最大流和最大流需要支付的最小费用。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个整数 $ n $、$ m $，表示有 $ n $ 个点 $ m $ 条边。\r\n\r\n从第二行开始的之后 $ m $ 行，每行四个整数 $ s_i $、$ t_i $、$ c_i $、$ w_i $ 表示一条从 $ s_i $ 到 $ t_i $ 的边，容量为 $ c_i $，单位流量需要支付的费用为 $ w_i $。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"一行两个整数，分别表示最大流和最大流需要支付的最小费用。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n10 21\r\n1 2 1 0\r\n1 3 3 0\r\n1 4 5 0\r\n1 5 10 0\r\n2 6 20 0\r\n2 7 20 1\r\n2 8 20 3\r\n2 9 20 7\r\n3 6 20 1\r\n3 8 20 3\r\n3 9 20 7\r\n4 6 20 3\r\n4 7 20 3\r\n4 9 20 7\r\n5 6 20 7\r\n5 7 20 7\r\n5 8 20 7\r\n6 10 2 0\r\n7 10 2 0\r\n8 10 5 0\r\n9 10 10 0\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n18 126\r\n```"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"总数据范围限制：$1 \\leq n \\leq 50, 0 \\leq m \\leq 601, w_i\\geq 0$\r\n\r\n| 子任务编号 | 测试点编号 | $n=$ |\r\n| :--------: | :--------: | :--: |\r\n|    $1$     |    $1$     | $10$ |\r\n|    $1$     |    $2$     | $20$ |\r\n|    $1$     |    $3$     | $30$ |\r\n|    $2$     |    $4$     | $40$ |\r\n|    $2$     |    $5$     | $42$ |\r\n|    $2$     |    $6$     | $44$ |\r\n|    $2$     |    $7$     | $46$ |\r\n|    $2$     |    $8$     | $48$ |\r\n|    $2$     |    $9$     | $50$ |\r\n\r\n本题中子任务 $1$ 分数为 $1$ 分，子任务 $2$ 分数为 $99$ 分。你必须通过一个子任务下所有的测试点以获得该子任务的全部分数。\r\n\r\n**请注意，常用的费用流算法时间复杂度是伪多项式的。**\r\n\r\n### 致谢\r\n\r\n感谢 [min_25](https://min-25.hatenablog.com/entry/2018/03/19/235802) 提供的数据生成器。\r\n\r\n感谢 [ouuan](https://ouuan.github.io/%E5%9F%BA%E4%BA%8E-Capacity-Scaling-%E7%9A%84%E5%BC%B1%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%B5%81%E7%AE%97%E6%B3%95/) 在他的博客中介绍的弱多项式复杂度最小费用流算法。"}]}