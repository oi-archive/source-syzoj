{"title":"「长乐国庆集训2018ROUND1」4. 二叉查找树","time_limit":1000,"memory_limit":256,"tags":[],"operation":{"submit":"https://oj.iqzsy.xyz/problem/5159#submit_code","submissions":"https://oj.iqzsy.xyz/submissions?problem_id=5159","statistics":"https://oj.iqzsy.xyz/problem/5159/statistics/fastest","testdata":"https://oj.iqzsy.xyz/problem/5159/testdata","discussion":"https://oj.iqzsy.xyz/discussion/problem/5159"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"二叉查找树是一种特殊的二叉树(每个节点最多只有两个儿子的树)。树的每个节点上存有一个唯一的值，并且满足：这个节点的左子树内所有点的值都比这个节点的值小，且右子树内所有点的值都比这个节点的值要大。\r\n\n\r\n\n对于一棵二叉查找树 $T$，我们可以将一个值为 $val$ 的新点插入 $T$ 中，且保持树的性质。算法如下:\r\n\n\r\n\n```\r\n\n//lc[x]表示节点x的左儿子  \r\n\n//rc[x]表示节点x的右儿子  \r\n\n//num[x]表示节点x的权值  \r\n\nvoid insert(int x, int val)\r\n\n{\r\n\n\tif (val < num[x]) \r\n\n\t{  \r\n\n\t\tif (!lc[x]) \r\n\n\t\t{  \r\n\n\t\t\tlc[x] = ++T;  \r\n\n\t\t\treturn ;  \r\n\n\t\t}  \r\n\n\t\telse   \r\n\n\t\t\tinsert(lc[x], val);\r\n\n\t}\r\n\n\telse if (val > num[x])\r\n\n\t{\r\n\n\t\tif (!rc[x])\r\n\n\t\t{\r\n\n\t\t\trc[x] = ++T;\r\n\n\t\t\treturn ;\r\n\n\t\t}\r\n\n\t\telse\r\n\n\t\t\tinsert(rc[x], val);\r\n\n\t}\r\n\n}\r\n\n```\r\n\n\r\n\n需要将 $val$ 插入二叉查找树 $T$ 时，执行 `insert(root, val)`。\r\n\n\r\n\n现在有 $N$ 个数需要插入一棵空树中。给定插入序列，请在每个元素被插入之后，输出所有节点的深度总和（根的深度为 $0$）。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"输入的第一行一个整数 $n$，表示序列长度。\r\n\n\r\n\n以下 $n$ 行是序列中的数字，这些数字是各不相同的，在 $[1,n]$ 区间。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出 $n$ 行，第 $i$ 行整数表示第 $i$ 个数插入树后，至这个节点的节点深度总和。 "},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"输入样例：\r\n\r\n```\r\n8\r\n3 \r\n5 \r\n1 \r\n6 \r\n8 \r\n7 \r\n2 \r\n4\r\n```\r\n\r\n输出样例：\r\n\r\n```\r\n0 \r\n1 \r\n2 \r\n4 \r\n7 \r\n11 \r\n13 \r\n15\r\n```"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于 $50\\%$ 的数据，$N\\le 1000$；\r\n\n\r\n\n对于 $100\\%$ 的数据，$N\\le 3\\times 10^5$。"}]}