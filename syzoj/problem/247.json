{"title":"[福利]可持久化线段树","time_limit":10000,"memory_limit":256,"tags":["线段树"],"operation":{"submit":"https://syzoj.com/problem/247#submit_code","submissions":"https://syzoj.com/submissions?problem_id=247","statistics":"https://syzoj.com/problem/247/statistics/fastest","testdata":"https://syzoj.com/problem/247/testdata","discussion":"https://syzoj.com/discussion/problem/247"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"为什么说本题是福利呢？因为这是一道非常直白的可持久化线段树的练习题，目的并不是虐人，而是指导你入门可持久化数据结构。\r\n\r\n线段树有个非常经典的应用是处理RMQ问题，即区间最大/最小值询问问题。现在我们把这个问题可持久化一下:\r\n\r\nQ k l r 查询数列在第k个版本时，区间[l, r]上的最大值\r\n\r\nM k p v 把数列在第k个版本时的第p个数修改为v，并产生一个新的数列版本\r\n\r\n最开始会给你一个数列，作为第1个版本。每次M操作会导致产生一个新的版本。\r\n\r\n修改操作可能会很多呢，如果每次都记录一个新的数列，空间和时间上都是令人无法承受的。\r\n\r\n所以我们需要可持久化数据结构:\r\n\r\n![Markdown](http://cogs.pro:8081/upload/image/20161116/20161116151606_65054.jpg)\r\n\r\n对于最开始的版本1，我们直接建立一颗线段树，维护区间最大值。\r\n\r\n修改操作呢？我们发现，修改只会涉及从线段树树根到目标点上一条树链上logn个节点而已，其余的节点并不会受到影响。所以对于每次修改操作，我们可以只重建修改涉及的节点即可。就像这样:\r\n\r\n![Markdown](http://cogs.pro:8081/cogs/upload/image/20161116/20161116151646_11588.png)\r\n\r\n需要查询第k个版本的最大值，那就从第k个版本的树根开始，像查询普通的线段树一样查询即可。\r\n\r\n要计算好所需空间哦"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个整数N, Q。N是数列的长度，Q表示询问数\r\n\r\n第二行N个整数，是这个数列\r\n\r\n之后Q行，每行以0或者1开头，0表示查询操作Q，1表示修改操作M，格式为\r\n\r\n0 k l r 查询数列在第k个版本时，区间[l, r]上的最大值 或者\r\n\r\n1 k p v 把数列在第k个版本时的第p个数修改为v，并产生一个新的数列版本"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"对于每个M询问，输出正确答案"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"##input\r\n\r\n```\r\n4 5\r\n1 2 3 4\r\n0 1 1 4\r\n1 1 3 5\r\n0 2 1 3\r\n0 2 4 4\r\n0 1 2 4\r\n```\r\n\r\n#output\r\n\r\n```\r\n4\r\n5\r\n4\r\n4\r\n```\r\n\r\n#解释\r\n\r\n序列版本1: 1 2 3 4\r\n\r\n查询版本1的[1, 4]最大值为4\r\n\r\n修改产生版本2: 1 2 5 4\r\n\r\n查询版本2的[1, 3]最大值为5\r\n\r\n查询版本1的[4, 4]最大值为4\r\n\r\n查询版本1的[2, 4]最大值为4\r\n"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"N <= 10000\r\n\r\nQ <= 100000\r\n\r\n对于每次询问操作的版本号k保证合法，区间[l, r]一定满足1 <= l <= r <= N\r\n\r\n# 最后\r\n\r\n他还有一个高贵冷艳的名字：主席树。 然后你A了就可以去装13了"}]}